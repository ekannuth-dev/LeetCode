class Solution(object):
	def jump(self, nums):
		moves = 0
		dp = [0] * len(nums)
		if len(nums) == 1:
			return 0
		for i in range(len(nums)):
			moves = dp[i] + 1
			for j in range(i,i + nums[i] + 1):
				if dp[-1] != 0:
					print(dp[-1])
					return dp[-1]
				elif dp[j] == 0:
					dp[j] = moves
		return dp[-1]

object = Solution()
#Base Case
#object.jump([2,10,0,1,4])
#object.jump([2,3,1,1,4])

#Edge case
object.jump([2])

#Test Case bigger moves but not needed
#object.jump([10,9,8,7,6,100,1])

#Test Case must take every move
#object.jump([1,1,1,1,10])

#Test Case combination of moves
#object.jump([3,3,10,2,9,4,4,3,2,1])

#Test Case combination of moves
#object.jump([3,5,1,1,1,1,1,1,1,1])




